1. length(): Calcula la longitud de una lista, es decir, cuenta los elementos que se encuentran dentro de ella.
    Ejemplo de uso: 
    ?- length([1, 2, 3, 4], N).
    % N = 4.
2. sum_list(): Suma los elementos de una lista.
    Ejemplo de uso:
    ?- sum_list([1, 2, 3, 4], S).
    % S = 10.
3. member(): Esta función verifica si un elemento está en la lista.
    Ejemplo de uso:
    ?- member(3, [1, 2, 3, 4]).
    % true.
    ?- member(5, [1, 2, 3, 4]).
    % false.
4. concatenate(): Concatena dos listas en una nueva lista.
    Ejemplo de uso:
    ?- concatenate([1, 2], [3, 4], L).
    % L = [1, 2, 3, 4].
5. reverse(): Invierte el orden de los elementos en una lista.
    Ejemplo de uso:
    ?- reverse([1, 2, 3, 4], R).
    % R = [4, 3, 2, 1].
6. last(): Esta función devuelve el último elemento de la lista.
    Ejemplo de  uso:
    ?- last([1, 2, 3, 4], X).
    % X = 4.
7. eliminar(): Elimina la aparición de un elemento en una lista.
    Ejemplo de uso:
    ?- eliminar(3, [1, 2, 3, 4, 3], L).
    % L = [1, 2, 4, 3].
8. minimo(): Esta función devuelve el elemento más pequeño en una lista de números.
    Ejemplo de uso:
    ?- minimo([4, 2, 7, 1, 5], M).
    % M = 1.
9. separar_pares_impares(): Esta función divide una lista de números en dos listas: una de pares y otra de impares.
    Ejemplo de uso:
    ?- separar_pares_impares([1, 2, 3, 4, 5], Pares, Impares).
    % Pares = [2, 4],
    % Impares = [1, 3, 5].
10. contar_ocurrencias(): Esta función cuenta cuántas veces aparece un elemento específico en una lista.
    Ejemplo de uso:
    ?- contar_ocurrencias(3, [1, 3, 2, 3, 4, 3], N).
    % N = 3.